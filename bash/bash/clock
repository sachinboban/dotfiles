#!/bin/bash
# display clock at the right top of the shell.
# clock contains date, time, git branch and return status of the last bash
# command

# colors for prompt
GREEN='\[\033[1;32m\]'
BLUE='\[\033[1;34m\]'
RED='\[\033[1;31m\]'
DEFAULT='\[\033[1;00m\]'

# git branch
function git_branch() {
  if git status > /dev/null 2>&1; then
      BRANCH="$(git branch | cut -b 3-)"
  else
    BRANCH=""
  fi
  echo $BRANCH
}

GIT_BRANCH=$(git_branch)

let DATE_X=$COLUMNS-16
let STATUS=0

function prompt_command {
    STATUS=$?

    DATE=$(date +%a,\ %b\ %d\ %Y)
    TIME=$(date +%I:%M%P)
    GIT_BRANCH=$(git_branch)
    STATUS_COLOR=$BLUE

    let DATE_X=$COLUMNS-16

    if [ $STATUS -eq 0 ]; then
        STATUS_STR="OK"
        STATUS_COLOR=$BLUE
    else
        STATUS_STR="ERROR\($STATUS\)"
        STATUS_COLOR=$RED
    fi
    let STATUS_X=$COLUMNS-${#STATUS_STR}

    PROMPT="${debian_chroot:+($debian_chroot)}${GREEN}\u@\h${DEFAULT}:${BLUE}\W${DEFAULT}\$ "
    DATE_LINE="\[\033[1;${DATE_X}H\]${BLUE}\${DATE}${GREEN}|"
    TIME_LINE="\[\033[2;${DATE_X}H\]${BLUE}\$(printf "%16s" $TIME)${GREEN}|"
    GITB_LINE="\[\033[3;${DATE_X}H\]${BLUE}\$(printf "%16s" $GIT_BRANCH)${GREEN}|"
    STAT_LINE="\[\033[4;${DATE_X}H\]${STATUS_COLOR}\$(printf "%16s" ${STATUS_STR})${GREEN}|"

PS1="${PROMPT}\
\[\033[s\]\
${DATE_LINE}\
${TIME_LINE}\
${GITB_LINE}\
${STAT_LINE}\
${DEFAULT}\[\033[u\]"
}

PROMPT_COMMAND=prompt_command
